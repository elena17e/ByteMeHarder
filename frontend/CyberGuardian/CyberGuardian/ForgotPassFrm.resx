<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxResetPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>